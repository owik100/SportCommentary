@using SportCommentaryDataAccess
@using SportCommentaryDataAccess.DTO.Commentary
@inject NavigationManager _navigationManager

  <MudTable SortLabel="Sortuj według" Striped Items="@comments.Items" Hover="true" Breakpoint="Breakpoint.Xs"  Loading="@(comments == null)" LoadingProgressColor="Color.Info" Filter="new Func<CommentaryDTO ,bool>(FilterFunc)">
        <ToolBarContent>
            <MudText Typo="Typo.h6">Relacje</MudText>
            <MudSpacer />
                <MudTextField @bind-Value="searchString" Immediate="true" Placeholder="Szukaj" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
        </ToolBarContent>
             <ColGroup>
                 <col style="width: 5%" />
                 <col style="width: 5%" />
                 <col style="width: 200px" />
                 <col />
                 <col style="width: 250px" />
             </ColGroup>
        <HeaderContent>
           <MudTh><MudTableSortLabel SortBy="new Func<CommentaryDTO, object>(x=>GetRowNumber(x))">Lp.</MudTableSortLabel></MudTh>
           <MudTh><MudTableSortLabel SortBy="new Func<CommentaryDTO, object>(x=>x.IsLive)">Live</MudTableSortLabel></MudTh>
           <MudTh><MudTableSortLabel SortBy="new Func<CommentaryDTO, object>(x=>x.Caption)">Nazwa</MudTableSortLabel></MudTh>
           <MudTh><MudTableSortLabel SortBy="new Func<CommentaryDTO, object>(x=>x.CommentaryStart)">Data rozpoczęcia</MudTableSortLabel></MudTh>
           <MudTh>Akcje</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Lp.">@(GetRowNumber(context))</MudTd>
                        <MudTd DataLabel="Live"> <MudCheckBox @bind-Checked="@context.IsLive" Color="Color.Primary" ReadOnly="true"></MudCheckBox></MudTd>
                        <MudTd Style="cursor:pointer"  @onclick="()=>MoveToCommentary(context.CommentaryID)" DataLabel="Nazwa">
                            @context.Caption
                        </MudTd>
                        <MudTd DataLabel="Data rozpoczęcia">@context.CommentaryStart</MudTd>
                        <MudTd DataLabel="Akcje">
                               <MudButton class="mr-2" Variant="Variant.Filled" @onclick="(()=> OnEditClick.InvokeAsync(context.CommentaryID))" StartIcon="@Icons.Material.Filled.Edit" Color="Color.Secondary">Edytuj</MudButton>
                                   <MudButton Variant="Variant.Filled" @onclick="(()=> OnDeleteClick.InvokeAsync(context.CommentaryID))" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error">Usuń</MudButton>
                        </MudTd>
                    </RowTemplate>
                </MudTable>

                <MudPagination SelectedChanged="PageChanged" Class="mt-5" Color="Color.Primary" Count="comments.TotalPages" />
    @code {
    [Parameter]
    public PagedList<CommentaryDTO>? comments { get; set; }

    [Parameter]
    public EventCallback<int> OnEditClick { get; set; }

    [Parameter]
    public EventCallback<int> OnDeleteClick { get; set; }

    [Parameter]
    public EventCallback<int> OnPageChange { get; set; }

    private int selectedPage = 1;

    private string searchString = "";
    private bool FilterFunc(CommentaryDTO element) => FilterFuncWithSearch(element, searchString);

    private bool FilterFuncWithSearch(CommentaryDTO element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Caption.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        return false;
    }

    private int? GetRowNumber(object element) =>
       comments?.Items.TakeWhile(x => x != element).Count() + 1;

    private void PageChanged(int i)
    {
        OnPageChange.InvokeAsync(i);
    }

    private void MoveToCommentary(int id){
        _navigationManager.NavigateTo($"/commentary/{id}");
    }
}